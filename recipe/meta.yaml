{% set name = "pynisher" %}
{% set version = "0.6.4" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/automl/{{ name }}/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 9b36cb0598d527b074456d02385a336ec40aeb0047dd68894b169c2a6a97304c

build:
  number: 0
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  skip: True  # [py<37]

requirements:
  host:
    - pip
    - python
    - setuptools
    - wheel
  run:
    - psutil
    - python
    - typing_extensions
    - pywin32  # [win]

test:
  source_files:
    - test
  imports:
    - pynisher
  commands:
    - pip check
    # add test to skip jinja variable. have lines that are only selected for which platform it's running.
    - pytest -v . -k " not (test_num_processes or test_out_of_memory or test_kill_subprocesses or test_liblinear_svc or test_too_little_memory)" # [linux]
    - pytest -v . -k " not (test_liblinear_svc or test_out_of_memory or test_raise or test_too_little_memory or test_kill_subprocesses or test_busy_in_C_library)" # [osx]
  requires:
    - pip
    - pytest
    #- pytest-forked
    - scikit-learn


about:
  home: https://github.com/automl/pynisher
  summary: A small Python library to limit the resources used by a function by executing it inside a subprocess.
  description: |
    The pynisher is a little module intended to limit a functions resources. It starts a new process, sets the desired limits,
    and executes the function inside it. In the end, it returns the function return value. If, for any reason,
    the function call is not successful, None is returned.
  license: MIT
  license_family: MIT
  license_file: LICENSE
  dev_url: https://github.com/automl/pynisher
  doc_url: https://github.com/automl/pynisher/blob/main/README.md

extra:
  recipe-maintainers:
    - BastianZim
    - mfeurer
